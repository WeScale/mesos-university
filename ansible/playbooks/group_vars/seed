mesos_masters:
  ami: "{{ amazon.ami_debian_wheezy }}"
  type: m1.small
  client: mesos-university
  count: "{{ amazon.instances.mesos.master.count }}"
  name: mesos-university_mesos_master
  cluster_role: mesos_master
  cluster_base_role: mesos
  security_group:
    name: mesos-university_mesos_master_sg
    description: mesos-university_mesos_master security group rules
    rules:
      - { proto: tcp, from_port: 22, to_port: 22, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 5050, to_port: 5050, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8080, to_port: 8080, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 2181, to_port: 2181, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 2888, to_port: 2888, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 3888, to_port: 3888, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8181, to_port: 8181, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 1024, to_port: 65535, group_name: mesos-university_mesos_master_sg }
      - { proto: tcp, from_port: 1024, to_port: 65535, group_name: mesos-university_mesos_slave_sg }
    rules_egress:
      - {proto: all , cidr_ip: "0.0.0.0/0", from_port: all, to_port: all}

mesos_slaves:
  ami: "{{ amazon.ami_debian_wheezy }}"
  type: m3.xlarge
  client: mesos-university
  count: "{{ amazon.instances.mesos.slave.count }}"
  name: mesos-university_mesos_slave
  cluster_role: mesos_slave
  cluster_base_role: mesos
  security_group:
    name: mesos-university_mesos_slave_sg
    description: mesos-university_mesos_slave security group rules
    rules:
      - { proto: tcp, from_port: 22, to_port: 22, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8081, to_port: 8081, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 31000, to_port: 32000, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 5051, to_port: 5051, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 1024, to_port: 65535, group_name: mesos-university_mesos_master_sg }
      - { proto: tcp, from_port: 1024, to_port: 65535, group_name: mesos-university_mesos_slave_sg }
    rules_egress:
      - {proto: all , cidr_ip: "0.0.0.0/0", from_port: all, to_port: all}

bamboo:
  ami: ami-394ecc4e
  type: m1.small
  client: mesos-university
  count: "{{ amazon.instances.bamboo.count }}"
  name: mesos-university_bamboo
  cluster_role: bamboo
  security_group:
    name: mesos-university_bamboo_sg
    description: mesos-university_bamboo security group rules
    rules:
      - { proto: tcp, from_port: 22, to_port: 22, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8000, to_port: 8000, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 80, to_port: 80, cidr_ip: 0.0.0.0/0 }
    rules_egress:
      - {proto: all , cidr_ip: "0.0.0.0/0", from_port: all, to_port: all}

influxdb:
  ami: "{{ amazon.ami_centos_7 }}"
  type: t2.medium
  client: mesos-university
  count: "{{ amazon.instances.influxdb.count }}"
  name: mesos-university_influxdb
  cluster_role: influxdb
  security_group:
    name: mesos-university_influxdb_sg
    description: mesos-university_influxdb security group rules
    rules:
      - { proto: tcp, from_port: 22, to_port: 22, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8083, to_port: 8083, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8086, to_port: 8086, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8090, to_port: 8090, cidr_ip: 0.0.0.0/0 }
      - { proto: tcp, from_port: 8099, to_port: 8099, cidr_ip: 0.0.0.0/0 }
    rules_egress:
      - {proto: all , cidr_ip: "0.0.0.0/0", from_port: all, to_port: all}
